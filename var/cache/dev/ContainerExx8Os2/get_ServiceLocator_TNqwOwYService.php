<?php

namespace ContainerExx8Os2;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_TNqwOwYService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.TNqwOwY' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.TNqwOwY'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\HebergementController::delete' => ['privates', '.service_locator.8yM7Yzz', 'get_ServiceLocator_8yM7YzzService', true],
            'App\\Controller\\HebergementController::edit' => ['privates', '.service_locator.8yM7Yzz', 'get_ServiceLocator_8yM7YzzService', true],
            'App\\Controller\\HebergementController::index' => ['privates', '.service_locator.2LM0auT', 'get_ServiceLocator_2LM0auTService', true],
            'App\\Controller\\HebergementController::new' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\HebergementController::show' => ['privates', '.service_locator.B0T.OmM', 'get_ServiceLocator_B0T_OmMService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\HebergementController:delete' => ['privates', '.service_locator.8yM7Yzz', 'get_ServiceLocator_8yM7YzzService', true],
            'App\\Controller\\HebergementController:edit' => ['privates', '.service_locator.8yM7Yzz', 'get_ServiceLocator_8yM7YzzService', true],
            'App\\Controller\\HebergementController:index' => ['privates', '.service_locator.2LM0auT', 'get_ServiceLocator_2LM0auTService', true],
            'App\\Controller\\HebergementController:new' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\HebergementController:show' => ['privates', '.service_locator.B0T.OmM', 'get_ServiceLocator_B0T_OmMService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\HebergementController::delete' => '?',
            'App\\Controller\\HebergementController::edit' => '?',
            'App\\Controller\\HebergementController::index' => '?',
            'App\\Controller\\HebergementController::new' => '?',
            'App\\Controller\\HebergementController::show' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\HebergementController:delete' => '?',
            'App\\Controller\\HebergementController:edit' => '?',
            'App\\Controller\\HebergementController:index' => '?',
            'App\\Controller\\HebergementController:new' => '?',
            'App\\Controller\\HebergementController:show' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
